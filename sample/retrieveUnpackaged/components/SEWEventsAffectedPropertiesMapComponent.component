<!--
    Type:      Component
    Purpose:   SEW Events Map
     
    Used By:   SEWEventsAffectedPropertiesPage
    ---------------------------------------------------------------
    History:

    16/04/2014 ejandusay(Cloud Sherpas)         Created
-->
<apex:component controller="SEWEventsLocationController">

	<apex:attribute name="componentValue" description="Attribute on the component."
                  type="String" required="required" assignTo="{!isSingleLocation}"/>

	<head >
	<script src="https://maps.googleapis.com/maps/api/js?v=3&sensor=false" type="text/javascript"></script>
    <script src="/soap/ajax/23.0/connection.js" type="text/javascript" />
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

		<apex:form id="jsFORM">
			<script>
           
		        jQuery(document).ready(function() { 
		        	getLocations();
		        
		        });

				//build markers for the map according to SEW Events object
		        function getLocations(){
					
					var map = new google.maps.Map(document.getElementById('map'), {
		              center: new google.maps.LatLng(-37.9504385,145.0804548 ),
		              streetViewControl: true,
		              mapTypeControl: true,
		              panControl: true,
		              zoomControl: true,
		              mapTypeId: google.maps.MapTypeId.ROADMAP
		            });
		                
		            var infowindow = new google.maps.InfoWindow({
		                maxWidth: 200,
		                disableAutoPan: true,
		                pixelOffset: new google.maps.Size(10,10) 
		            });
		    
		            google.maps.event.addListener(map, 'click', function() {
		                  infowindow.close();
		                });
		            var marker;
		            var i;
		            //bounds is used to make sure all markers fit in map
		            var bounds = new google.maps.LatLngBounds();
		            //apex repeat to loop within SEW Events object
		             <apex:repeat value="{!relatedProperties}" var="ss" id="theRepeat">
					 	var latitude;
		             	var longitude;
		             	var post;
		             	
		             	var image = "http://maps.google.com/mapfiles/ms/icons/red-dot.png";
						if ('{!ss.Street_Address__c}' != null && '{!ss.Suburb__c}' != null) {
		    					 var geocoder = new google.maps.Geocoder();
		    					 var address = '{!ss.Street_Address__c}' + ' ' +'{!ss.Suburb__c}' + ' '+'{!ss.State__c}' + ' '+'{!ss.Postal_Code__c}';
		    					//call google geocoder service to convert address to a geolocation value 
								geocoder.geocode({ 'address': address }, function (results, status) {
									if (status == google.maps.GeocoderStatus.OK) { 
											latitude = results[0].geometry.location.lat();
											longitude = results[0].geometry.location.lng();
											post = new google.maps.LatLng(latitude,longitude);

											//assigning markers     
					                          marker = new google.maps.Marker({
					                            position: post,
					                            map: map,
					                            icon:image,
					                            title: '{!ss.Street_Address__c}'
					                          }); 
					                          
					                       marker.html =
					                         '<div style="width: 190px;">'
					                            +'<b>'
					                            +'{!ss.Street_Address__c} {!ss.Suburb__c} {!ss.State__c} {!ss.Postal_Code__c}'
					                            +'</b>'
					                            +'</div>';
					                                                 
					                     bounds.extend(marker.position);      
					                    //add listeners
					                      google.maps.event.addListener(marker, 'click', (function(marker, i) {
					                          return function() {
					                            infowindow.setContent(this.html);
					                            infowindow.open(map, this);
					                            }
					                          })(marker,i));
							            
							            map.fitBounds(bounds);

									}
								});        
		                	}	
		             </apex:repeat> 

		        
		        }
		        
			</script>

		</apex:form>
		<style>
	        #map {
	          font-family: Arial;
	          font-size:12px;
	          line-height:normal !important;
	          height:850px;
	          width:100%;
	          background:transparent;
	        }
	        .button_map {
	            position: absolute;
	            left:20px;
	            margin-top: 5px;
	            height: 17px;
	            width: 80px;
	            z-index: 1;
	            color: #000;
	            line-height: 20px;
	            font-size: 12px;
	            padding: 0px 5px;
	            border: 1px solid #a9bbdf;
	            background: #fdfdfd;
	            font-weight: bold;
	               -moz-user-select: -moz-none;
	               -khtml-user-select: none;
	               -webkit-user-select: none;
	               user-select: none;
	            cursor: hand;
	            -moz-box-shadow: 0 0 7px 2px #999;
	            -webkit-box-shadow: 0 0 7px 2px #999;
	        }
	        #wrapper {
	            position: relative;
	        }
	    </style>
	    <apex:pageBlock >   
	        <apex:form >     
	            <apex:pageblockSection columns="2" >

	                <apex:PageBlockSectionItem dataStyle="width:100%;" rendered="{!adjustSize}" id="pbItem">
	                    <body onload="initialize()">
	                        <div id="map" style="height:400px;"></div>
	                    </body>     
	                </apex:PageBlockSectionItem>
	                <apex:PageBlockSectionItem dataStyle="width:80%;" rendered="{!displayList}" id="pbMap">
	                    <body onload="initialize()">
	                        <div id="map"></div>
	                    </body>     
	                </apex:PageBlockSectionItem>
	
	            </apex:pageblockSection>
	        </apex:form>
	
	    </apex:pageBlock>

	</head>


</apex:component>